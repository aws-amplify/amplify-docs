```diff
{% raw %}--- a/src/components/AlbumDetails.js
+++ b/src/components/AlbumDetails.js
@@ -1,20 +1,88 @@
 import { API } from 'aws-amplify';
 import React, { useEffect, useState } from 'react';
-import { Dimmer, Header, Loader, Message, Segment } from 'semantic-ui-react';
+import {
+  Button,
+  Dimmer,
+  Header,
+  Loader,
+  Message,
+  Segment,
+  Form
+} from 'semantic-ui-react';
+
+import { onUpdateAlbum } from '../graphql/subscriptions';
 
 import DeleteAlbum from './DeleteAlbum';
 import PhotoList from './PhotoList';
 import { getAlbum } from '../graphql/queries';
+import { updateAlbum } from '../graphql/mutations';
 import useAuth from '../useAuth';
 
 function AlbumDetails({ album }) {
+  const { owner } = useAuth();
+  const [isEditing, setIsEditing] = useState(false);
+  const [isUpdating, setIsUpdating] = useState(false);
   const photos = album.photos.items;
 
+  const handleCancel = () => {
+    setIsEditing(!isEditing);
+    setIsUpdating(false);
+  };
+
+  const handleSave = event => {
+    const updatedName = event.target.albumName.value.trim();
+
+    setIsUpdating(true);
+
+    API.graphql({
+      query: updateAlbum,
+      variables: {
+        input: {
+          id: album.id,
+          expectedVersion: album.version,
+          name: updatedName
+        }
+      }
+    });
+  };
+
   return (
     <Segment.Group>
       <Segment clearing>
         <Header data-test="album-header" floated="left" size="huge">
-          <Header.Content>{album.name}</Header.Content>
+          <Header.Content>
+            {isEditing ? (
+              <Form onSubmit={handleSave}>
+                <Form.Input
+                  action={{
+                    color: 'green',
+                    disabled: isUpdating,
+                    loading: isUpdating,
+                    icon: 'check'
+                  }}
+                  autoFocus
+                  defaultValue={album.name}
+                  name="albumName"
+                />
+              </Form>
+            ) : (
+              album.name
+            )}
+          </Header.Content>
+
+          {owner && (
+            <Header.Subheader>
+              <Button
+                basic
+                circular
+                content={isEditing ? 'Cancel' : 'Edit'}
+                icon={isEditing ? 'close' : 'pencil'}
+                onClick={handleCancel}
+                size="mini"
+                style={{ position: 'relative', top: '0.5em' }}
+              />
+            </Header.Subheader>
+          )}
         </Header>
       </Segment>
 
@@ -49,6 +117,20 @@ export default function AlbumDetailsLoader(props) {
     });
   }, [id, owner]);
 
+  useEffect(() => {
+    const subscription = API.graphql({
+      authMode: owner ? 'AMAZON_COGNITO_USER_POOLS' : 'AWS_IAM',
+      query: onUpdateAlbum,
+      variables: { owner }
+    }).subscribe({
+      next(payload) {
+        setAlbum(payload.value.data.onUpdateAlbum);
+      }
+    });
+
+    return () => subscription.unsubscribe();
+  }, [id, owner]);
+
   if (isLoading) {
     return (
       <Dimmer active inverted page>
@@ -65,5 +147,5 @@ export default function AlbumDetailsLoader(props) {
     );
   }
 
-  return <AlbumDetails album={album} />;
+  return <AlbumDetails album={album} key={`${album.id}-${album.version}`} />;
 }{% endraw %}
```