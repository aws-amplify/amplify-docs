```diff
{% raw %}--- a/src/components/PhotosUploader.js
+++ b/src/components/PhotosUploader.js
@@ -1,4 +1,4 @@
-import { API, Auth, Storage } from 'aws-amplify';
+import { API, Auth, Predictions, Storage } from 'aws-amplify';
 import nanoid from 'nanoid';
 import React, { createRef, useState } from 'react';
 import { Button } from 'semantic-ui-react';
@@ -37,17 +37,37 @@ export default function PhotosUploader({ album }) {
 
     await Promise.all(
       files.map(async file => {
+        const source = { file };
+        const type = 'LABELS';
+
         // ! Even though Storage.put works, the lambda trigger
         // ! will get AccessDenied errors when accessing S3 files
         // ! with special characters: https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html
         const s3SafeName = `${nanoid()}-${file.name}`.replace(/[^\w.-]/g, '');
 
-        const { key } = await Storage.put(s3SafeName, file, {
-          metadata: {
-            albumId: album.id,
-            owner: user.username
-          }
-        });
+        const [labels, { key }] = await Promise.all([
+          // Normalize & keep labels with higher confidence
+          Predictions.identify({
+            labels: { source, type }
+          })
+            .then(payload => {
+              return payload.labels
+                .filter(label => label.metadata.confidence >= 70)
+                .map(label => label.name.toLowerCase());
+            })
+            .catch(error => {
+              // In case there are any 504 gateway errors, don't block uploading
+              console.error(error);
+              return [];
+            }),
+
+          Storage.put(s3SafeName, file, {
+            metadata: {
+              albumId: album.id,
+              owner: user.username
+            }
+          })
+        ]);
 
         const { width, height } = await loadImage(file);
 
@@ -64,6 +84,7 @@ export default function PhotosUploader({ album }) {
                   height
                 },
                 photoAlbumId: album.id,
+                labels,
                 description: file.name.replace(/\.(gif|jpg|jpeg|png)$/i, '')
               }
             }{% endraw %}
```